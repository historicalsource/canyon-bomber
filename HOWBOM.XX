	.TITLE HOWBOM
	;CANYON BOMBER DIAGNOSTIC
	.ASECT
	.RADIX 16
	.=9C00

ATR1ON	=0702
ATR2ON	=0703
ATR1OF	=0700
ATR2OF	=0701
LEDS	=0E000
SWTCH	=0E800
BLANK	=3F
JMPAD	=10
WIS1ON	=0602
WIS2ON	=0603
WIS1OF	=0600
WIS2OF	=0601
LAMPON	=0682
PF	=0800
TEMP1	=0
TEMP2	=02
TEMP3	=04
TEMP4	=06
TEMP5	=08
TEMP6	=0A
COIN1	=1000
EXPL	=0500
MOTOR1	=0400
MOTOR2	=0401
VBLANK	=1005
BSPH	=0BD1
BSPV	=0BD8
BSLH	=0BD5
BSLV	=0BDC
WSPH	=0BD3
WSPV	=0BDA
WSLH	=0BD7
WSLV	=0BDE
BSPS	=0BD9
WSPS	=0BDB

	.MACRO .MSG,STRING,COLOR		;COLOR=0 =>BLACK, COLOR=80=>WHITE
	.IRPC X,STRING
	.IF EQ,''X-40
	.LAST=3F
	.IFF
	.IF LT,''X-40
	.LAST=''X-30
	.IFF
	.LAST=''X-37
	.ENDC
	.ENDC
	.BYTE .LAST!COLOR
	.ENDR
	.=.-1
	.BYTE .LAST!40!COLOR
	.ENDM
PWRON:	LDX I,0FF
	TXS
	STA A,ATR1ON		;SOUND OFF
	STA A,ATR2ON
	LDA I,0
	STA A,EXPL
	STA A,LEDS		;LEDS OFF
DIAGSW:	CLD
	LDA A,SWTCH		;PICK UP SWITCHES
	AND I,1F
	BEQ RAMTST
	CMP I,14
	BCS DIAGSW
	STA Z,TEMP6		;SAVE
	ASL			;MULTIPLY BY 2
	TAX			;A -> X
	LDA AX,JMPTBL		;GET LOW ORDER JUMP ADDRESS
	STA Z,JMPAD		;PUT IT IN PAGE ZERO
	LDA AX,JMPTBL+1		;GET HIGH ORDER
	STA Z,JMPAD+1		;STORE IT
	LDA A,TEMP6		;GET SWITCHES
	AND I,1E		;MASK FOR
	EOR I,04		;TEST 4 OR 5
	BEQ 1$			;SKIP IF IT IS
	STA A,WIS1OF		;WHISTLES OFF
	STA A,WIS2OF
1$:	JMP N,JMPAD		;GET OUT OF HERE
READSW:	LDA A,SWTCH		;GET SWITCHES
	AND I,1F
	EOR Z,TEMP6		;COMPARE WITH PREVIOUS
	RTS			;RETURN
RAMTST:	LDA I,00		;CLEAR RAM,X,Y
	TAX
1$:	STA ZX,00
	INX
	BNE 1$
	TAY
	LDA I,11		;TEST CODE
3$:	STA ZX,0
	CMP ZX,0		;VERIFY
	BNE RAMERA
	INX
	INY
2$:	LDA ZX,0		;CHECK REST OF RAM FOR ZERO
	BNE RAMERB
	INX
	INY
	BNE 2$
	LDA ZX,0		;GET DATA BACK
	STY ZX,00		;CLEAR OUT TEST
	INX			;NEXT BYTE
	BNE 3$
	ASL			;NEXT DATA CHECK
	BCC 3$
NOERR:	LDA I,88
	STA A,LEDS
	BNE DIAGSW
RAMERA:	EOR ZX,0		;FIND ERROR BIT
RAMERB:	TAY			;SAVE IT
	AND I,0F		;CHECK LOWER 4
	BEQ 4$
	LDA I,0F
	STA A,LEDS		;TURN ON LOWER 4 LEDS
4$:	TYA			;GET ERROR BACK
	AND I,0F0		;CHECK UPPER 4
	BEQ DIAGSW
	LDA I,0F0
	STA A,LEDS		;TURN ON UPPER 4 LEDS
	BNE DIAGSW
;SCREEN RAM TEST
SCRAM:	LDY I,0			;CLEAR PATTERN
1$:	LDX I,0			;CLEAR LOCATION COUNTER
2$:	TYA			;DATA PATTERN -> A
	STA AX,PF
	INY			;BUMP PATTERN
	TYA
	STA AX,PF+100		;NEXT PAGE
	INY
	TYA
	STA AX,PF+200
	INY
	TYA
	STA AX,PF+300
	DEY			;NET EFFECT, Y=Y+1
	DEY
	INX			;BUMP LOCATION POINTER
	BNE 2$
3$:	TYA			;TEST PATTERN -> A
	EOR AX,PF
	STA AX,PF		;GOOD PATTERN=0
	BNE PFERR
	INY			;NEXT PATTERN
	TYA
	EOR AX,PF+100
	STA AX,PF+100
	BNE PFERR
	INY
	TYA
	EOR AX,PF+200
	STA AX,PF+200
	BNE PFERR
	INY
	TYA
	EOR AX,PF+300
	STA AX,PF+300
	BNE PFERR
	DEY			;Y=Y+1
	DEY
	INX			;BUMP LOCATION
	BNE 3$			;DO ALL 1K
	INY
	BNE 1$			;DO NEXT PATTERN
	JMP PWRON		;TEST OK, CLEAR LEDS
PFERR:	STA A,LEDS		;PUT ERROR BIT(S) ON LEDS
	JMP A,DIAGSW		;GET OUT
;SCREEN RAINBOW
SRAIN:	LDX I,00		;CLEAR X
1$:	TXA			;X -> A
	STA AX,PF		;STORE A ABSOLUTE INDEXED
	STA AX,PF+0FF		;STORE A AND OFFSET IT
	STA AX,PF+1FE
	STA AX,PF+2FD
	INX			;INCREMENT X
	BNE 1$			;256 BYTES?
	JMP A,DIAGSW		;GO TO DIAGNOSTIC BOARD SWITCH READ
ROMTST: JSR BLNKPF		;CLEAR SCREEN
5$:	LDA I,30		;SET HIGH ADDRESS
	STA Z,TEMP3+1
	LDX I,4			;X=4 PAGES
	LDY I,00
	TYA			;CLEAR CHECKSUM
	STY Z,TEMP3		;CLEAR ADDRESS MSB
	JSR CALC
	BEQ 1$
	LDY I,2
	BNE 2$			;BRA
1$:	LDY I,0
2$:	LDX I,0
	JSR MESS
	LDA I,38
	STA Z,TEMP3+1
	LDX I,8
	LDY I,00
	TYA
	JSR CALC
	BEQ 3$
	LDY I,0E*2
	BNE 4$
3$:	LDY I,0D*2
4$:	LDX I,2
	JSR MESS
	JSR READSW
	BEQ 5$
	JMP DIAGSW
CALC:	CLC
	ADC NY,TEMP3		;ADD TO CHECKSUM
	INY			;BUMP ADDRESS
	BNE CALC			;LOOP
	INC Z,TEMP3+1		;BUMP PAGE NUMBER
	DEX
	BNE CALC			;DO REST OF 2K
	STA Z,TEMP2		;VIEW CHECKSUM
	CMP I,69		;ROM SHOULD SUM TO 69
	RTS			;SKIP IF OK
SOUND1:	STA A,ATR1OF		;ATTRACT OFF
	STA A,WIS1ON		;WHISTLE 1 ON
	STA A,WIS2OF
	STA A,ATR1ON
	STA A,ATR2ON
WISDLY:	JSR WAIT		;WAIT FOR VBLANK
	BEQ 1$			;COUNTER DONE?
	JMP PWRON
1$:	STA A,WIS1OF		;WHISTLES OFF
	STA A,WIS2OF		;FOR
	LDY I,40		;1 SECOND
2$:	JSR WAIT
	BNE 2$
	JMP PWRON
SOUND2:	STA A,WIS1OF
	STA A,WIS2ON		;WHISTLE 2 ON
	STA A,ATR1ON
	STA A,ATR2ON
	JMP A,WISDLY		;GO TO TIMER
SOUND3:	STA A,ATR1OF		;MOTOR 1 ON
	STA A,ATR2ON
MTRDLY:	INC Z,TEMP5		;BUMP MOTOR FREQ.
	LDA Z,TEMP5
	STA A,MOTOR1
	STA A,MOTOR2
	LDY I,20		;WAIT FOR .5 SECONDS
1$:	JSR WAIT
	BNE 1$
	JMP PWRON
SOUND4:	STA A,ATR1ON		;MOTOR 2 ON
	STA A,ATR2OF
	JMP A,MTRDLY		;GO TO TIMER
WAIT:	LDA A,SWTCH
	BMI WAIT		;MSB SET?
1$:	BIT A,VBLANK		;LEADING EDGE
	BMI 1$
2$:	BIT A,VBLANK		;TRAILING EDGE
	BPL 2$
	DEY			;DECREMENT COUNTER
	RTS
SHIPS:	JSR BLNKPF		;CLEAR PLAYFIELD
	JSR RSTOBJ		;CLEAR MOTION OBJECTS
	LDA A,TEMP6		;TEST 9 OR A?
	AND I,01
	ASL
	TAX
	LDA I,80		;CENTER SHIP ON SCREEN
	STA AX,BSPH
	STA AX,BSPV
1$:	JSR SHPSEL		;DETERMINE WHICH SHIP
	JSR WAIT		;TIMER
	JSR READSW		;SWITCHES CHANGED?
	BEQ 1$			;NO, LOOP
	JMP DIAGSW		;YES, GET OUT
HMOTN:	JSR BLNKPF		;CLEAR PLAYFIELD
	JSR RSTOBJ		;ZERO MOTION COORDINATES
	LDA A,TEMP6
	AND I,03		;DECODE 2 LSB SWITCHES
	ASL			;INTO OBJECT NUMBER
	TAX			;SAVE IT
	LDA I,80		;MOVE HALFWAY UP SCREEN
	STA AX,BSPV
1$:	TYA
	STA AX,BSPH		;FRAME COUNTER LOCATES SHIP H
	JSR WAIT		;TIMER
	JSR READSW		;SWITCHES CHANGED?
	BEQ 1$			;NO, LOOP
	JMP DIAGSW		;YES, GET OUT
VMOTN:	JSR BLNKPF
	JSR RSTOBJ
	LDA A,TEMP6
	AND I,03
	ASL
	TAX
	LDA I,80
	STA AX,BSPH
1$:	TYA
	STA AX,BSPV
	JSR WAIT
	JSR READSW
	BEQ 1$
	JMP DIAGSW
SHPSEL:	TYA			;GET FRAME COUNT
	AND I,60		;2 BITS
	LSR			;SHIFT
	LSR
	STA AX,BSPS		;SAVE PARTIAL RESULTS
	TYA
	AND I,80		;GET MSB
	CLC
	ADC AX,BSPS		;ADD IN MSB
	STA AX,BSPS
	RTS
RSTOBJ:	LDX I,10		;SET UP LOOP COUNTER
	LDA I,0
1$:	STA AX,0BD0		;STORE ZEROES
	DEX			;AT MOTION OBJECTS
	BNE 1$
	RTS
BLNKPF:	LDX I,0			;BLANK PLAYFIELD
	LDA I,BLANK
1$:	STA AX,PF
	STA AX,PF+100
	STA AX,PF+200
	STA AX,PF+300
	INX
	BNE 1$
	RTS
SWITCH:	JSR BLNKPF
1$:	STA A,LAMPON
	STA A,LAMPON+1
	LDX I,7			;SET LOOP COUNTER
8$:	LDA AX,COIN1		;GET MSB
	BPL 2$			;WRITE BLANKS IF OFF
	JSR SWTON		;WRITE SWITCH ID IF ON
	JMP 3$
2$:	JSR SWTOFF		;BLANK MESSAGE
3$:	DEX			;ONE DOWN
	BPL 8$			;MORE TO GO?
	ROR A,COIN1+2		;CHECK FOR FIRE 1 (LSB)
	BCS 4$			;BLANKS IF OFF
	JSR SWTON		;FIRE 1
	JMP 5$
4$:	JSR SWTOFF		;BLANKS
5$:	DEX
	ROR A,COIN1+3
	BCS 6$
	JSR SWTON		;FIRE 2
	JMP 7$
6$:	JSR SWTOFF		;BLANKS
7$:	JSR READSW
	BEQ 1$
	JMP DIAGSW
SWTON:	STX Z,TEMP3		;SAVE X
	TXA			;JUSTIFY X TO +2
	CLC
	ADC I,04
	ASL			;MULTIPLY BY 2
	TAY			;MESSAGE NUMBER TO Y
	TAX			;MESSAGE LOCATION TO X
	JSR MESS
	LDX Z,TEMP3
	RTS			;RETURN
MESS:	LDA AY,MESTBL		;MESSAGE ADDRESS, FIRST BYTE
	STA Z,TEMP4
	LDA AY,MESTBL+1		;SECOND BYTE
	STA Z,TEMP4+1
	LDA AX,PFOSET		;MESSAGE OFFSET, FIRST BYTE
	STA Z,TEMP2
	LDA AX,PFOSET+1		;SECOND BYTE
	STA Z,TEMP2+1
	LDY I,0
1$:	LDA NY,TEMP4		;GET MESSAGE BYTE
	STA NY,TEMP2		;WRITE IT
	INY
	ASL			;CHECK FOR BIT 6
	BPL 1$			;LOOP IF NOT SET
	RTS			;RETURN
SWTOFF:	STX Z,TEMP3		;SAVE X
	TXA
	CLC
	ADC I,04		;JUSTIFY X TO +2
	ASL			;MULTIPLY BY 2
	TAX			;LOCATION TO X
	LDY I,0C*2		;MESSAGE NUMBER 12 (BLANKS)
	JSR MESS
	LDX Z,TEMP3
	RTS
SOUND5:	STA A,ATR1OF		;SOUND 1 ON
	STA A,ATR2ON		;SOUND 2 OFF
	LDA I,0FF
	STA A,MOTOR1		;MOTOR 1 TO LOWEST FREQ.
1$:	JSR WAIT		;GET TIMER COUNT
	TYA
	LSR
	LSR
	STA A,EXPL		;PUT MIDDLE 4 IN EXPL
	JSR READSW
	BEQ 1$			;SWITCHES CHANGED?
	STA A,ATR1ON		;YES, TURN OFF SOUND
	JMP DIAGSW
JMPTBL:	.WORD RAMTST,SCRAM,SRAIN,ROMTST,SOUND1,SOUND2,SOUND3,SOUND4
	.WORD HMOTN,HMOTN,HMOTN,HMOTN,VMOTN,VMOTN,VMOTN,VMOTN
	.WORD SHIPS,SHIPS,SWITCH,SOUND5
PFOSET:	.WORD 0808,0828,0848,0868,0888,08A8,08C8,08E8,0948,0968,0908,0928
MESTBL:	MES0,MES1,MES2,MES3,MES4,MES5,MES6,MES7,MES8,MES9,MES10,MES11,MES12,MES13,MES14
MES0:	.MSG <ROM@1@OK>,80
MES1:	.MSG <ROM@1@BAD>,00
MES2:	.MSG <FIRE@2>,80
MES3:	.MSG <FIRE@1>,00
MES4:	.MSG <COIN@1>,00
MES5:	.MSG <COIN@2>,00
MES6:	.MSG <START@1>,00
MES7:	.MSG <START@2>,80
MES8:	.MSG <@>,00
MES9:	.MSG <@>,00
MES10:  .MSG <HI@SCORE@RESET>,00
MES11:	.MSG <SLAM@SWITCH>,00
MES12:	.MSG <@@@@@@@@@@@@@@@@@@@@>,00
MES13:  .MSG <ROM@2@OK>,80
MES14:  .MSG <ROM@2@BAD>,00
FILL	=9FFA-.
	.REPT FILL
	.BYTE 00
	.ENDR
	.WORD PWRON,PWRON,PWRON
	.END
                                                                                                                                                                                                                                                                                                                                        