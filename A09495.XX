	.TITLE	CRACK WITH DRONE
	.ASECT
	.RADIX 16
	.MACRO .MSG,STRING,COLOR	;COLOR 00=BLACK, 80=WHITE
	.IRPC X,STRING
	.IF EQ,''X-40
	.LAST=3F
	.IFF
	.IF LT,''X-40
	.LAST=''X-30!COLOR
	.IFF
	.LAST=''X-37!COLOR
	.ENDC
	.ENDC
	.BYTE .LAST
	.ENDR
	.=.-1
	.BYTE .LAST!40
	.ENDM
BLACK	=00
WHITE	=01
WHITE2	=02
CNMSK	=0F0
COINSW	=1000
START	=1002
VBLANK	=1005
HISCRT  =1006
SLMSW	=1007
ATTON	=0702
ATTOFF	=0700
WHISON	=0602
WHISOF	=0600
SHPSOT	=0BD1
BHPSOT	=0BD5
SVPSOT	=0BD8
SHPADD	=0BD9
BVPSOT	=0BDC
PLYFLD	=0800
LOC0	=08C7
LOC1	=0887
CNOPT	=1800
TMOPT	=1801
EXPOPT	=1802
LANOPT	=1803
WTCHDG  =0501
TSTSW	=1004
LAMPON	=0682
LAMPOF	=0680
FIRE	=1002
EXPLOD	=0500	
MOTSND	=0400	
CHKSUM  =0
SLO0	=1A
SLO1	=1C
CREDLC  =09
BLPTME  =50
SVPOS:	.BLKB	4
BVPOS:	.BLKB	4
HPOS:	.BLKB	4
HVEL:	.BLKB	2
SHPC:	.BLKB	2
TEMP:	.BLKB	6
SAVE:	.BLKB	2
BOMFLG: .BLKB	2
FIRESV:	.BLKB	2
DIRFLG:	.BLKB	2
BVVEL:	.BLKB	4
COLCNT:	.BLKB	2
MISES:	.BLKB	2
RANDOM:	.BLKB	2
FRMCNT:	.BLKB	2
COLON:	.BLKB	1
COLOR:	.BLKB	1
DROOP:	.BLKB	2
FRZTME:	.BLKB	1
GMECNT: .BLKB	1
COST:	.BLKB	1
COINDB:	.BLKB	2
COINCT:	.BLKB	1
MODE:	.BLKB	2		;B0=ALIVE, B1=PLAYER, B2=DRONE, B7=FREEZE
MESCNT:	.BLKB	1
TSCORE:	.BLKB	4
SCORE:	.BLKB	4
EXPADD:	.BLKB	8
EXPCNT:	.BLKB	8
BLKT:	.BLKB	2
BLKL:	.BLKB	1
CANCNT: .BLKB	1
ROM	=1
	.IF DF,ROM
	.IFF
	.=0B000
PWRON:	LDA I,NMI&0FF00/100
	STA A,0F7A2
	LDA I,NMI&0FF
	STA A,0F7A1
	SEI
	LDX I,0FF
	.IFT
	.=3800
PWRON:	LDX I,0FF
	.ENDC
	TXS
	LDA I,00			;CLEAR WORKING RAM
	LDX I,7F
1$:	STA ZX,00
	DEX
	BPL 1$
	CLD
	JSR RERITE
	LDX I,WHITE
2$:	JSR A,INIT			;INITIALIZE BLACK SHIP
	DEX				;WHITE
	BEQ 2$				;INITIALIZE WHITE SHIP
MONIT:  LDA A,TSTSW			;TEST MODE?
	BPL 6$
	LDY I,00			;PLYFLD TEST
7$:	TYA
	STA AY,PLYFLD
	STA AY,PLYFLD+0FF
	STA AY,PLYFLD+1FE
	STA AY,PLYFLD+2FD
	INY
	BNE 7$
	JSR SWTST				;EXOR ALL SWITCHES
	STA Z,TEMP+1
8$:	JSR SWTST
	EOR Z,TEMP+1
	TAX
	STA AX,WHISOF
	STA A,LAMPON				;LAMPS ON
	STA A,LAMPON+1
	LDA A,TSTSW
	BMI 8$
	BPL PWRON
6$:	LDX I,01		;WHITE FIRST
X2:	LDA ZX,MODE
	BEQ ATT
	BMI FREZ
	ROR			;CHECK PLAY BIT
	BCS PLAY
EDGE:	LDA I,00			;SHIP TO BOTTOM
	STA ZX,SVPOS
	STA ZX,BVPOS
	LDA I,0F0			;SHIP TO EDGE
	STA ZX,HPOS
	STA AX,ATTON
	BNE X1				;BRA
PLAY:	STA AX,ATTOFF
	JSR A,SHIP			;UPDATE SHIP POSITION
	JSR A,BOMB			;UPDATE BOMB POSITION
X1:	DEX				;NEXT PLAYER
	BMI X3
	BPL X2
FREZ:	LDA Z,COINCT
	CMP Z,COST
	BCC CLRFRZ			;COINCT .LT. COST
	LDA Z,MODE			;BOTH PLAYERS STARTED?
	CMP Z,MODE+1		;IF BOTH MODES SAME, START GAME
	BEQ CLRFRZ
	INC FRZTME
	BEQ CLRFRZ
	JSR MESS
X3:	JMP EXPL
CLRFRZ:	LDA ZX,MODE
	AND I,07		;CLEAR FREEZE BIT
	CMP I,01
	BNE 3$			;PLAYEE?
	LDA I,05		;MAKE A DRONE
3$:	STA ZX,MODE
	JSR TME
2$:	JSR INIT
	DEX
	BEQ CLRFRZ
SETUP:  LDA I,04			;#OF CANYONS ALLOWED
	STA Z,CANCNT
	JSR RERITE
	LDX I,13
	LDA I,00
1$:	STA ZX,SCORE			;CLEAR EXPLOSION COUNTERS AND SCORE
	DEX
	BPL 1$
	LDA I,0B
	STA Z,DROOP+1
	LDA I,80
	STA Z,DROOP
	BNE EXPL			;BRA
ATT:	JSR RANNUM
	AND I,01
	STA Z,GMECNT
	JSR SHIP
	JSR REARM			;NO FLOATING BOMS IN ATTRACT
	STX A,EXPLOD
	STA AX,WHISOF
	STA AX,ATTON
	DEX				;DO AGAIN FOR BLACK
	BPL ATT
	JSR MESS
	JSR BLOCK
	BMI EXPL			;BRA
SWTST:  LDA A,COINSW+3
	EOR A,COINSW+2
	STA Z,TEMP
	EOR A,COINSW+1
	EOR A,COINSW
	EOR A,SLMSW
	EOR A,HISCRT
	ROL
	ROL
	EOR Z,TEMP
	AND I,01
	ASL
	RTS
EXPL:	LDX I,06			;START AT #4
2$:	LDA ZX,EXPCNT			;CHECK COUNT
	BEQ 1$
	ASL
	ASL
	ASL
	STA A,EXPLOD
	LDA NX,EXPADD
	ADC I,01
	AND I,0FB
	DEC ZX,EXPCNT
	BNE 3$				;LAST TIME?
	LDA I,0FF
3$:	STA NX,EXPADD
1$:	DEX				;NEXT PICTURE
	DEX
	BPL 2$
	LDX I,09			;POINT THROUGH BLKT AND EXPCNT
5$:	LDA ZX,EXPCNT
	BNE DROP			;GET OUT IF ANY ONE IS NON-ZERO
	DEX
	BPL 5$
	LDA Z,CANCNT			;ANOTHER CANYON ALLOWED
	BEQ DROP
	LDX I,01			;BRING BACK A DRONE
6$:	LDA ZX,MODE
	CMP I,04
	BNE 4$
	INC ZX,MODE
	JSR TME
4$:	DEX
	BEQ 6$
	JSR CANY
DROP:	LDA Z,DROOP			;GO TO NEXT ROW
	SEC
	SBC I,020
	STA Z,DROOP
	LDA Z,DROOP+1
	SBC I,00
	CMP I,0A			;TOP OF CANYON?
	BCS 1$				;BGE
	LDA I,80			;MOVE TO BOTTOM
	STA Z,DROOP
	LDA I,0B
1$:	STA Z,DROOP+1
	LDY I,1F			;INITIALIZE COLUMN POINTER
4$:	LDA NY,DROOP			;LOOK FOR A BUBBLE
	STA Z,TEMP
	AND I,0FC
	CMP I,0B0
	BNE 2$				;IF NOT, GO ON
	STY Z,TEMP+1			;SAVE POINTER
	TYA				;CREATE TEST POINTER
	ADC I,1F			;CARRY SET
	TAY
	LDA I,0FF			;CODE FOR BLANK
	CMP NY,DROOP
	BNE 5$
3$:	LDA Z,TEMP			;GET BUBBLE
	STA NY,DROOP			;STORE IN SPACE
	LDY Z,TEMP+1			;RESTORE POINTER
	LDA I,0FF			;BLANK
	STA NY,DROOP
5$:	LDY Z,TEMP+1
2$:	DEY				;NEXT COLUMN
	BPL 4$
6$:	BIT A,VBLANK
	BMI 6$
	LDX I,WHITE
LAMP:	STA AX,LAMPOF			;TURN OFF LAMPS
	LDA ZX,MODE
	ASL				;IGNORE FREEZE BIT
	CMP I,06			;PLAYER?
	BNE 3$
	STA AX,LAMPON
3$:	LDA I,10			;BLINK?
	BIT Z,FRMCNT
	BEQ OUTPUT
	LDA Z,COINCT
	CMP Z,COST
	BCC OUTPUT
	LDY Z,MODE			;BLINK IN FREEZE
	DEY				;CARRY MUST BE SET
	BPL OUTPUT			;N CLEAR ONLY IN GAME
1$:	STA AX,LAMPON
OUTPUT:	TXA				;Y=2X
	ASL
	TAY
	LDA ZX,SVPOS
	STA AY,SVPSOT
	LDA ZX,BVPOS
	STA AY,BVPSOT
	LDA ZX,HPOS
	EOR ZX,DIRFLG
	SEC
	SBC I,10
	STA AY,SHPSOT
	LDA ZX,HPOS
	CLC
	ADC I,05
	EOR ZX,DIRFLG
	STA AY,BHPSOT
	LDA ZX,SHPC
	EOR I,08
	STA ZX,SHPC
	STA AY,SHPADD
	CLC
	TXA
	ROR
	ROR
	STA Z,COLOR			;COLOR=00 OR 80
	LDY AX,SCROUT			;GET LOCATIN OF SCORE
	TXA
	PHA
	ADC I,SCORE			;CARRY CLEAR
	TAX				;X POINTS TO RAM LOC TO BE OUTPUTED
	JSR UNPAK
	PLA
	TAX
	LDY ZX,MODE
	DEY
	BPL 4$				;N=0 DURING GAME
	LDY AX,TSROUT
	TXA
	PHA
	CLC
	ADC I,TSCORE
	TAX
	JSR UNPAK
	PLA
	TAX
	BPL 5$				;BRA
	STA AY,PLYFLD-2
4$:	LDY AX,SCROUT
	LDA ZX,MISES
	AND I,0F
	ORA Z,COLOR
	STA AY,PLYFLD+7
5$:	DEX
	BNE 2$
	JMP LAMP
2$:	INC FRMCNT
	STA A,WTCHDG
1$:	BIT A,VBLANK			;DON'T GO BACK TILL NO MORE VBLANK
	BPL 1$
	JMP MONIT
UNPAK:  LDA ZX,0			;GET NUMBER
	AND I,0F
	ORA Z,COLOR
	STA AY,PLYFLD
	LDA ZX,00
	LSR
	LSR
	LSR
	LSR
	ORA Z,COLOR
	STA AY,PLYFLD-1
	LDA ZX,02
	LSR
	LSR
	LSR
	LSR
	BNE 3$			;BLANK IF 0
	LDA I,3F
3$:	ORA Z,COLOR
	STA AY,PLYFLD-3
	LDA ZX,02
	BNE 4$
	LDA I,3F
	BNE 5$
4$:	AND I,0F
	ORA Z,COLOR
5$:	STA AY,PLYFLD-2
	RTS
RERITE: LDA I,0FF		;CLEAR TOP OF SCREEN
	LDY I,00
1$:	STA AY,PLYFLD
	STA AY,PLYFLD+100
	INY
	BNE 1$
X4:	LDY I,0A0		;WRITE FLOOR
	LDA I,2A
X5:	STA AY,0B00
	INY
	BNE X5
CANY:	LDA I,0A		;BUILD CANYON POINTER
	STA Z,TEMP+1		;POINTER=0A00+#BUBBLES/2
	LDA I,0D0
	STA Z,TEMP
	TAY
1$:	DEY
	LDA AY,LN16		;GET INFORMATION
	PHA
	AND I,0F
	JSR PROC		;UNPACK & OUTPUT
	DEC Z,TEMP
	PLA			;GET LEFT NIBBLE
	LSR
	LSR
	LSR
	LSR
	JSR PROC
	TYA			;TEST Y
	BNE 1$
BLOCK:	LDA I,01
	STA Z,BLKT
	LDA I,31
	STA Z,BLKT+1
	LDA I,98
	STA Z,BLKL
	LDA I,BLPTME
	STA Z,GMECNT
	DEC Z,CANCNT
TOPMES:	LDA I,PLYFLD&0FF+38	;HEADING
	STA Z,TEMP+2
	JSR LAN			;SETUP ADDRESS OF MESTBL IN TEMP+4, 5
	LDY I,26		;HEDTBL=MESTBL+1F
	LDX Z,MODE
	DEX
	BPL 1$			;N WILL BE CLEAR ONLY DURING GAME
	LDY I,2E
1$:	STY Z,MESCNT
	ASL Z,COLOR		;CLEAR COLOR
	LDA NY,TEMP+4		;GET MESSAGE
	LSR
	TAY
	ROR Z,COLOR
	JSR MESOUT
	LDY Z,MESCNT		;NEXT MESSAGE
	DEY
	LDA Z,TEMP+2
	SEC
	SBC I,08		;NEXT ADDRESS SPACE
	STA Z,TEMP+2
	BPL 1$
	RTS
PROC:	PHA
	CLC
	AND I,08		;TEST BIT 3
	BEQ 1$
	PLA
	ADC I,1C		;IT'S A WALL
	BCC 2$			;BRA
1$:	PLA
	ADC I,0B0
2$:	STA NY,TEMP
	RTS
MESS:	LDA I,00
	STA Z,COLOR			;DEFAULT TO BLACK
	JSR LAN			;SETUP ADDRESS OF MESTBL IN TEMP+4, 5
	LDA Z,FRMCNT
	ROR
	BCS M1
M6:	LDY I,SLO0
	LDA NY,TEMP+4
	STA Z,TEMP+2
	BIT Z,FRMCNT
	BVS 10$
	LDY I,0A			;PUSH START
	LDA Z,COST
	BEQ MESOUT				;SKIP IF FREE
	LDA Z,COINCT
	CMP Z,COST		;SKIP IF NO CREDIT
	BCC 6$
	LDY I,0C			;YOU HAVE CREDIT
	JSR MESOUT
	LDA Z,COINCT
	LDX I,0FF			;NEXT INSTRUCTIN SETS X TO 0
	SEC
3$:	INX				;LOOP IS DONE ONE EXTRA TIME
	SBC Z,COST
	BCS 3$
	LDA I,3F			;BLANK
	CPX I,02			;ONLY ONE CREDIT
	BCS 5$
	STA NY,TEMP+2			;BLANK 'S'
5$:	LDY I,1E			;LOCATION OF "CREDIT" FOR MESTBL
	LDA NY,TEMP+4
	TAY
	TXA
	STA NY,TEMP+2
6$:	RTS
10$:	LDY I,0A			;PUSH START
	LDA Z,COINCT
	CMP Z,COST
	BCS MESOUT
	RTS
M1:	LDY I,SLO1
	LDA NY,TEMP+4
	STA Z,TEMP+2
	BIT Z,FRMCNT
	BMI 4$
	LDA A,CNOPT
	AND I,03
	ASL
	TAY
	BPL MESOUT			;BRA
4$:	LDA A,TMOPT
	AND I,03
	ADC I,02
	LDY Z,TEMP+2
	STA AY,PLYFLD
	INC Z,TEMP+2
	LDY I,08
;TEMP+2, 3 CONTAINS SCREEN ADDRESS
;TEMP+4, 5 CONTAINS ADDRESS OF MESSAGE TABLE
;Y CONTAINS 2 (MESSAGE NUMBER)
MESOUT:	LDA NY,TEMP+4			;USE Y TO POINT TO MESSAGE ADDRESS
	STA Z,TEMP			;BUILD IN TEMP
	INY
	LDA NY,TEMP+4
	STA Z,TEMP+1
	LDA I,08			;MSB OF SCREEN ADDRESS ALWAYS 08
	STA Z,TEMP+3
	LDY I,0FF			;FIRST INY PUTS Y=0
2$:	INY
	LDA NY,TEMP			;C(TEMP)=MESSAGE ADDRESS
	ORA Z,COLOR
	STA NY,TEMP+2
	ASL				;CHECK "END-OF-MESSAGE" BIT (BIT 6)
	BPL 2$				;BRA
1$:	RTS
LAN:	LDA A,LANOPT			;GET LANGUAGE OPTION
	AND I,03
	ASL
	TAX
	LDA AX,LANTBL			;PUT POINTER TO APPRORIATE MESSAGE TABLE
	STA Z,TEMP+4			;IN TEMP+4
	LDA AX,LANTBL+1
	STA Z,TEMP+5
	RTS
TME:	LDA A,TMOPT
	AND I,03
	CLC
	ADC I,03
	STA ZX,MISES
	RTS
INIT:	JSR A,RANNUM			;GET A RANDOM NUMBER
	AND I,03
	TAY
	LDA AY,VPTBL			;C(A)=ONE OF FOUR POSITIONS
	LDY Z,GMECNT
	BNE 7$
	SEC
	SBC I,30
7$:	TAY				;SAVE A
	STX Z,TEMP			;SAVE X
	TXA
	EOR I,01
	TAX
	TYA
	CMP ZX,SVPOS
	BNE 8$
	ADC I,0F			;CARRY SET
8$:	LDX Z,TEMP			;RESTORE X
	STA ZX,SVPOS			;STORE FOR SHIP & BOMB
	LDA I,10			;CLEAR HORIZONTAL POSITION
	STA ZX,HPOS
	LDA I,00
	STA ZX,BOMFLG			;CLEAR BOMB FLAG
	STA ZX,DIRFLG			;CLEAR DIRECTION
	LDY Z,GMECNT		;START OF GAME?
	CPY I,BLPTME
	BNE 11$
	LDA I,0FE		;CARRY SET
	ADC Z,TEMP		;C(A)=FE+1+C(X)=00 OR FF
	STA ZX,DIRFLG		;BLACK FROM LEFT, WHITE FROM RIGHT
	BVC 1$			;BRA
11$:	LDA Z,BLKL
	STA Z,TEMP+1
	LDA I,00
	CLC
	LDY I,04
10$:	ROL Z,TEMP+1			;MULTIPLY BY 16
	ROL
	DEY
	BNE 10$
	STA Z,TEMP
	SEC
	LDY I,0FF			;SET COUNTER
2$:	INY
	CPY I,10			;CHECK FOR OVERFLOW
	BCS 9$
	SEC
	LDA Z,TEMP+1			;SUBTRACT
	SBC Z,BLKT+1
	STA Z,TEMP+1
	LDA Z,TEMP
	SBC Z,BLKT
	STA Z,TEMP
	BCS 2$
9$:	STY Z,TEMP
	JSR RANNUM
	AND I,0F
	CMP Z,TEMP			;TEMP IS CUT-OFF POINT
	BCC 1$
	DEC ZX,DIRFLG			;C(DIRFLG) EITHER 00 OR FF
1$:	JSR A,RANNUM			;GET A RANDOM NUMBER
	AND I,3F
	ADC I,50
	LDY Z,GMECNT
	BNE 5$				;TIME FOR PLANE?
	ADC I,40
5$:	STA ZX,HVEL
	LDA ZX,DIRFLG
	EOR I,0FF
	AND I,80
	STA Z,TEMP
	LDA I,00
	LDY Z,GMECNT
	BNE 6$
	LDA I,10
6$:	ORA Z,TEMP
	STA ZX,SHPC
	JMP REARM			;ARM PLANE
SHIP:	LDA ZX,HVEL
	CLC
	ADC ZX,HPOS+2
	STA ZX,HPOS+2
	LDA ZX,HPOS
	ADC I,00
	CMP I,0F0			;CHECK FOR END OF SCREEN
	BCS CONT
	STA ZX,HPOS
	RTS
CONT:	LDA ZX,MODE			;PLAYING?
	ROR
	BCC 1$
	LDA ZX,BOMFLG			;BOMB DROPPED?
	BEQ 2$
	ASL
	EOR ZX,BOMFLG			;MISS IF B6 EOR B7 TRUE
	BPL 1$
2$:	JSR MSLEFT
1$:	JMP INIT
BOMB:	LDA ZX,BOMFLG			;BOMB FALLING?
	BMI 1$				;B7=DROPPING, B6=HIT, B5=DROPPED
	LDA ZX,MODE
	AND I,04
	BEQ 2$
	LDA ZX,HPOS			;FIRST HALF OF SCREEN?
	BMI COLSN
	BPL 3$				;DROP BOMB
2$:	LDY ZX,FIRESV			;GET LAST FIRE BUTTON
	ROR AX,FIRE			;BUTTON TO CARRY
	ROR ZX,FIRESV			;CARRY TO B7
	BMI COLSN			;NO BUTTON
	TYA				;CHECK OLD FIRE BUTTON
	BPL COLSN			;BUTTON HELD DOWN
3$:	STA AX,WHISON			;WHISTLE
	LDA I,0A0
	STA ZX,BOMFLG
1$:	LDA ZX,BVVEL+2			;ADD 4 TO BOMB VELOCITY
	SEC
	SBC I,04
	STA ZX,BVVEL+2
	LDA ZX,BVVEL
	SBC I,00
	STA ZX,BVVEL
	CLC
	LDA ZX,BVPOS+2
	ADC ZX,BVVEL+2
	STA ZX,BVPOS+2
	LDA ZX,BVPOS
	ADC ZX,BVVEL
B1:	STA ZX,BVPOS
COLSN:	LDA I,03			;START CORNER COUNTER
	STA Z,COLON
C3:	AND I,01
	CLC
	ADC ZX,BVPOS
5$:	EOR I,0FF			;CONVERT MOTION ADD TO PFLD
	SBC I,08
	STA Z,TEMP+2			;SAVE TO GET LOCATIN WITHIN MOLECULE
	CLC
	LDY I,00
	STY Z,TEMP+1
	ROL
	ROL Z,TEMP+1
	ROL
	ROL Z,TEMP+1
	AND I,0E0
	STA Z,TEMP
	LDA I,PLYFLD/100
	ADC Z,TEMP+1
	STA Z,TEMP+1
	LDA Z,COLON
	LSR
	CLC
	ADC ZX,HPOS
	LDY ZX,DIRFLG
	BNE 13$
	EOR I,0FF
	SBC I,09
13$:	TAY				;SAVE A
	AND I,07
	STA Z,TEMP+3			;SAVE TO GET LOCATION WITHIN MOLECULE
	TYA				;RESTORE A
	LSR
	LSR
	LSR
	TAY
	LDA NY,TEMP			;C(A)=MOLECULE BOMB IS IN
	CMP I,24			;MISS FROM 24-2A
	BCC 7$				;BLT
	CMP I,2B
	BCS 7$				;BGE
	SBC I,23			;CARRY WAS CLEAR
	ASL
	ASL
	STA Z,TEMP+4
	LDA Z,TEMP+2			;VERT POS
	AND I,06
	LSR
	ADC Z,TEMP+4
	STX Z,TEMP+4			;SAVE X
	TAX
	LDA AX,COLTBL
	LDX Z,TEMP+3
8$:	ASL
	DEX
	BPL 8$
	LDX Z,TEMP+4
	BCC C1
	JMP MISS
7$:	AND I,0FC
	CMP I,0B0			;HIT FROM B0-B3
	BNE C1
	SEC				;DECREMENT TOTAL BLOCK COUNT
	LDA Z,BLKT+1
	SBC I,01
	STA Z,BLKT+1
	LDA Z,BLKT
	SBC I,00
	STA Z,BLKT
	CPY I,10			;CHECK FOR LEFT SIDE OF SCREEN
	BCS 6$
	DEC Z,BLKL
6$:	SED
	LDA NY,TEMP			;GET MOLECULE FOR SCORE
	AND I,03
	SEC				;ADD ONE
	ADC ZX,SCORE
	STA ZX,SCORE
	LDA ZX,SCORE+2
	ADC I,00
	STA ZX,SCORE+2
	CLD
	CMP ZX,TSCORE+2			;COMPARE TO TOP SCORE MSB
	BNE 3$
	LDA ZX,SCORE
	CMP ZX,TSCORE			;IF MSB'S EQUAL, COMPARE LSB'S
	LDA ZX,SCORE+2
3$:	BCC 10$				;GET OUT IF LBSS
	STA ZX,TSCORE+2			;SCORE TO TOP SCORE
	LDA ZX,SCORE
	STA ZX,TSCORE
10$:	LDA I,0FC
	STA NY,TEMP
	TXA
	PHA
	LDX I,06			;X IS ADDRESS #4
2$:	LDA ZX,EXPCNT			;CHECK FOR A VACANCY
	BEQ 1$
	DEX
	DEX
	BPL 2$				;IF NO VACANCY,USE #1
	LDX I,00			;END SEQUENCE BEING INTERRUPTED
	LDA I,0FF
	STA NX,EXPADD
1$:	TYA				;TRANSFER ADDRESS TO BUFFER
	CLC
	ADC Z,TEMP
	STA ZX,EXPADD
	LDA Z,TEMP+1
	STA ZX,EXPADD+1
	LDA I,1F			;CLEAR COUNTER
	STA ZX,EXPCNT
	PLA
	TAX
	STA AX,WHISOF
	LDA I,0E0
	STA ZX,BOMFLG			;SET COLLISION FLAG
	DEC ZX,COLCNT			;BOMB DONE?
	BEQ MISS			;BRA
C1:	DEC Z,COLON			;DEC COUNT
	BMI SOUND
	JMP C3				;DO IT AGAIN
SOUND:	LDA ZX,HVEL
	EOR I,0FF
	LSR
	LSR
	LSR
	LSR
	STA AX,MOTSND
	LDA I,3F			;GAME TIMER - BLIMPS OR PLANES
	BIT Z,FRMCNT
	BNE 1$
	DEC Z,GMECNT
	BPL 1$				;NO UNDERFLOW
	INC Z,GMECNT
1$:	RTS
MISS:	LDA ZX,BOMFLG			;NO MISS IF SOMETHING HAD BEEN HIT.
	ASL
	BMI 2$
	JSR MSLEFT
2$:	LDA I,20			;SET "DROPPED" FLAG, CLEAR "DROPPING" FG
	STA ZX,BOMFLG			;RE-ARM PLANE
REARM:  LDA I,00
	STA ZX,BVVEL
	STA ZX,BVVEL+2
	LDA ZX,SVPOS
	STA ZX,BVPOS
	DEC ZX,BVPOS			;BVPOS=SVPOS-1
	LDA ZX,SHPC
	LDY I,04
	AND I,10
	BNE 4$
	LDY I,08
4$:	STY ZX,COLCNT
	STA AX,WHISOF
	RTS
MSLEFT: DEC ZX,MISES
	BNE 2$
	LSR ZX,MODE			;CLEAR BIT 0
	ASL ZX,MODE
	LDA I,03			;CHECK IF SOMEONE IS STILL PLAYING
	CMP Z,MODE
	BEQ 2$
	CMP Z,MODE+1
	BEQ 2$
	LDA I,00			;BACK TO ATTRACT
	STA Z,MODE
	STA Z,MODE+1
2$:	RTS
RANNUM:	LDY I,06
R1:	LDA Z,RANDOM+1
	ROR
	ROR
	ROR
	EOR Z,RANDOM
	ROL
	ROR Z,RANDOM
	ROR Z,RANDOM+1
	DEY
	BNE R1
	LDA Z,RANDOM
	ORA Z,RANDOM+1
	BNE R2
	DEC Z,RANDOM+1
R2:	LDA Z,RANDOM+1
	RTS
NMI:	PHA
	TXA
	PHA
	LDA A,CNOPT		;GET COST
	AND I,03
	CMP I,03
	BNE 1$
	ADC I,00		;INCREMENT C(A)=0,1,2, OR 4
1$:	STA Z,COST
	LDX I,01
COIN:	ROL A,SLMSW
	BCS 2$			;GET OUT IF SLAMMED
5$:	ROL AX,COINSW		;COIN TO CARRY
	ROR ZX,COINDB
	LDA ZX,COINDB
	AND I,0F8
	CMP I,CNMSK		;COMPARE TO MASK
	BNE 1$
	LDA Z,COINCT		;WE HAVE A COIN
	ADC I,01		;CARRY WAS SET ADDING 2
	CMP I,09		;NO MORE THAN 8 ALLOWED
	BCC 3$
	LDA I,08
3$:	STA Z,COINCT
1$:	LDA Z,COINCT		;SUFFICIENT CREDIT?
	CMP Z,COST
	BCC 2$
	LDA ZX,MODE			;SKIP IF B2 OR B1 TRUE
	AND I,06
	BNE 2$
4$:	ROL AX,START		;START TO CARRY
	BCC 6$
	LDA I,83		;SET FREEZE & PLAY BITS
	STA ZX,MODE
	TXA				;GET OTHER PLAYER
	PHA				;SAVE X
	EOR I,01
	TAX
	LDA ZX,MODE
	ORA I,81			;GET FREEZE
	STA ZX,MODE
	PLA				;RESTORE X
	TAX
	LDA Z,COINCT
	SBC Z,COST		;CARRY MUST BE SET
	STA Z,COINCT
	LDA I,00
	STA Z,FRZTME
6$:	ROL A,HISCRT		;HI SCORE RESET TO CARRY
	BCC 2$
	LDA I,00
	STA Z,TSCORE 		;C(A)=00
	STA Z,TSCORE+1
	STA Z,TSCORE+2
	STA Z,TSCORE+3
2$:	DEX
	BEQ COIN
	PLA
	TAX
	PLA
	RTI
SCROUT:	.BYTE 45,55
TSROUT:	.BYTE	4D,5D
VPTBL:	.BYTE	0B0,0C0,0D0,0C0
COLTBL:	.BYTE 80,0C0,0E0,0F0,0F8,0FC,0FE,0FF,0F0,0F0,0F0,0F0
	.BYTE 01,03,07,0F,1F,3F,7F,0FF,0F,0F,0F,0F
	.BYTE	0FF,0FF,0FF,0FF
MES0:	.MSG	<@@@@FREE@PLAY@@@@@>,0
MES1:	.MSG	<@2@PLAYS@PER@COIN@>,0
MES2:	.MSG	<1@COIN@PER@PLAYER@>,0
MES3:	.MSG	<2@COINS@PER@PLAYER>,0
MES4:	.MSG	<@MISSES@PER@PLAY@>,0
MES5:	.MSG	<PUSH@START@BUTTONS>,0
MES6:	.MSG	<YOU@HAVE@@@CREDITS>,0
MES7:	.MSG	<@@WHITE@>,0
MES8:	.MSG	<@@BLACK@>,0
MES9:	.MSG	<@MISSES@>,0
MES10:	.MSG	<@@HIGH@@>,0
MES11:	.MSG	<@@SCORE@>,0
MES12:	.MSG	<@@LEFT@@>,0
LANTBL: .WORD	MESTBL,3000,3100,3200
;MES0-MES12: ADDRESSES OF EACH MESSAGE
;LOC0-LOC1: STARTING LOCATION ON SCREEN
;CREDLC: DEPLACEMENT FROM LOC0 OF NUMBER OF CREDITS
MESTBL: .WORD	MES0,MES1,MES2,MES3,MES4,MES5,MES6,MES7,MES8
	.WORD	MES9,MES10,MES11,MES12,LOC0,LOC1
	.BYTE	CREDLC
;DATA IN HEDTBL=4 (MESSAGE NUMBER)+C.  C=0 BLACK, C=1 WHITE
HEDTBL: .BYTE	20,24,1D,25,2C,30,2D,31,20,28,1D,29,2C,2C,2D,2D
LN16:	.BYTE	82,10,00,00,00,00,00,00,00,00,00,00,00,00,01,0BE
LN17:	.BYTE	92,11,00,00,00,00,10,00,00,00,00,00,10,00,11,0CE
LN18:	.BYTE	0E9,22,10,10,00,00,00,01,00,00,02,00,00,00,12,0EE
LN19:	.BYTE	0EE,82,21,10,01,00,11,00,10,01,00,02,00,01,2B,0EE
LN20:	.BYTE	0EE,92,21,01,10,20,00,00,10,01,02,10,00,01,1D,0EE
LN21:	.BYTE	0EE,0E3,22,10,01,00,11,22,20,01,21,20,01,21,2D,0EE
LN22:	.BYTE	0EE,0E2,22,12,10,11,00,11,11,12,12,11,00,12,3C,0EE
LN23:	.BYTE	0EE,0E8,32,12,20,10,11,22,11,12,31,21,21,23,0CE,0EE
LN24:	.BYTE	0EE,0EE,82,21,21,13,21,11,22,11,21,11,22,3B,0EE,0EE
LN25:	.BYTE	0EE,0EE,0A3,32,11,21,12,21,12,22,11,21,12,3D,0EE,0EE
LN26:	.BYTE	0EE,0EE,0A3,32,22,22,0C9,22,23,22,32,22,23,3C,0EE,0EE
LN27:	.BYTE	0EE,0EE,93,33,33,3B,0EE,83,3B,0E9,33,22,33,3E,0EE,0EE
LN28:	.BYTE	0EE,0EE,0E9,33,33,3C,0EE,93,3C,0EE,93,33,33,0CE,0EE,0EE
	.IF DF,ROM
FILL	=3FF9-.
	.REPT FILL
	.BYTE 00
	.ENDR
	.BYTE	CHKSUM
	.WORD	NMI,PWRON,PWRON
	.ENDC
	.END
                                                                                                                  